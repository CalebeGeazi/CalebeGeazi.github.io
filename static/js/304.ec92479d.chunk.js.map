{"version":3,"file":"static/js/304.ec92479d.chunk.js","mappings":"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","sources":["components/GroupStage/Group.js","components/GroupStage/Groups.js","components/GroupStage/GroupStage.js","components/Team.js","../node_modules/react-swipeable/src/types.ts","../node_modules/react-swipeable/src/index.ts"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Group.css\";\nimport Team from \"../Team\";\nimport Button from \"@mui/material/Button\";\nimport { styled } from \"@mui/material/styles\";\nimport { useSwipeable } from \"react-swipeable\";\n\nconst Group = (props) => {\n  const [teams, setTeams] = useState(props.teams);\n  const selectedHandler = (team) => {\n    const selectedTeamsCount = teams.filter((t) => t.selected).length;\n    let updatedTeams = [...teams];\n    if (selectedTeamsCount < 2 || team.selected) {\n      team.selected = !team.selected;\n      props.onTeamSelected(team.selected);\n      updatedTeams = updatedTeams.map((team1) =>\n        team.id === team1.id ? team : team1\n      );\n    }\n    let selectedTeams = updatedTeams.filter((t) => t.selected);\n    let unselectedTeams = updatedTeams.filter((t) => !t.selected);\n    if (selectedTeams.length === 2) {\n      unselectedTeams = unselectedTeams.map((t) => {\n        t.disabled = true;\n        t.position = 3;\n        return t;\n      });\n    } else {\n      unselectedTeams = unselectedTeams.map((t) => {\n        t.disabled = false;\n        t.position = 3;\n        return t;\n      });\n    }\n\n    selectedTeams = selectedTeams.map((t, i) => {\n      t.position = i + 1;\n      return t;\n    });\n    setTeams(selectedTeams.concat(unselectedTeams));\n    props.onResult(selectedTeams.map((t) => t.id).join(\"\"), props.group);\n  };\n\n  const NextButton = styled(Button)({\n    fontWeight: \"bold\",\n    letterSpacing: \"2px\",\n    padding: \"8px 25px\",\n    fontSize: \"20px\",\n    display: props.position < 7 ? \"inline-flex\" : \"none\",\n    float: \"right\",\n  });\n  const PrevButton = styled(Button)({\n    fontWeight: \"bold\",\n    letterSpacing: \"2px\",\n    padding: \"8px 25px\",\n    fontSize: \"20px\",\n    display: props.position > 0 ? \"inline-flex\" : \"none\",\n    float: \"left\",\n  });\n\n  const isButtonDisabled = teams.filter((t) => t.selected).length < 2;\n\n  const nextHandler = () => props.onMove(props.position + 1);\n  const prevHandler = () => props.onMove(props.position - 1);\n\n  const swipeHandlers = useSwipeable({\n    onSwipedLeft: (e) => {\n      if (e.absX > 100 && props.position < 7 && !isButtonDisabled) {\n        props.onMove(props.position + 1);\n      }\n    },\n    onSwipedRight: (e) => {\n      if (e.absX > 100 && props.position > 0) {\n        props.onMove(props.position - 1);\n      }\n    },\n  });\n\n  return (\n    <div className=\"group w-full shrink-0\" {...swipeHandlers}>\n      <div className=\"group-container m-auto\">\n        <div className=\"text-xl md:text-2xl font-bold m-2 text-slate-600\">\n          Group {props.group}\n        </div>\n        <div className=\"relative rounded-tl-3xl rounded-br-3xl border-2 border-slate-400 mt-0 mb-2 mx-2 shadow-xl\">\n          {teams.map((team) => (\n            <Team team={team} key={team.id} onSelected={selectedHandler} />\n          ))}\n        </div>\n        <div className=\"relative p-2\">\n          <PrevButton\n            className=\"font-bold move-button\"\n            variant=\"contained\"\n            color=\"success\"\n            onClick={prevHandler}\n          >\n            Back\n          </PrevButton>\n          <NextButton\n            className=\"font-bold move-button\"\n            variant=\"contained\"\n            disabled={isButtonDisabled}\n            color=\"success\"\n            onClick={nextHandler}\n          >\n            Next\n          </NextButton>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Group;\n","import React, { Suspense } from \"react\";\nimport Group from \"./Group\";\nimport \"./Groups.css\";\n\nconst ToKnockoutRounds = React.lazy(() => import(\"./ToKnockoutRounds\"));\n\nconst Groups = (props) => {\n  const moveHandler = (position) => {\n    const element = document.querySelector(\".groups-container\");\n    element.style.transform = `translateX(-${100 * position}%)`;\n  };\n\n  const teamsSelectedHandler = (selected) => {\n    const newTeamsSelected = selected\n      ? props.teamsSelected + 1\n      : props.teamsSelected - 1;\n    props.setTeamsSelected(newTeamsSelected);\n  };\n\n  const clickHandler = () => {\n    const element = document.querySelector(\".groups\");\n    element.style.transform = \"translateY(-100%)\";\n    setTimeout(() => {\n      props.setLoadBracket(props.teamsSelected === 16);\n      window.scrollTo({\n        behavior: \"smooth\",\n        top: 0,\n      });\n    }, 500);\n    props.setTeamsSelected(0);\n    props.setSelections(15);\n  };\n\n  return (\n    <div className=\"groups overflow-hidden h-screen\">\n      <div className=\"groups-container flex flex-nowrap flex-row groups-container-transition\">\n        {props.groupsData.map((group, i) => (\n          <Group\n            teams={group.teams}\n            group={group.group}\n            key={group.group}\n            position={i}\n            onMove={moveHandler}\n            onResult={props.onResult}\n            onTeamSelected={teamsSelectedHandler}\n            totalTeamsSelected={props.teamsSelected}\n          />\n        ))}\n      </div>\n      {props.teamsSelected === 16 ? (\n        <Suspense fallback={<div></div>}>\n          <ToKnockoutRounds onClick={clickHandler} />\n        </Suspense>\n      ) : null}\n    </div>\n  );\n};\n\nGroups.defaultProps = {\n  teamsSelected: 0,\n};\n\nexport default Groups;\n","import Groups from \"./Groups\";\nimport { CookiesProvider, useCookies } from \"react-cookie\";\nimport { ProcessGroupStagePick } from \"../../util/CookieResultManager\";\n\nconst GroupStage = (props) => {\n  const [cookie, setCookie] = useCookies([\"result\"]);\n  function resultHandler(picks, group) {\n    let result = cookie.result;\n    result = ProcessGroupStagePick(result, picks, group);\n    setCookie(\"result\", result, { path: \"/\" });\n  }\n\n  return (\n    <CookiesProvider>\n      <Groups\n        onResult={resultHandler}\n        groupsData={props.groupsData}\n        teamsSelected={props.teamsSelected}\n        setTeamsSelected={props.setTeamsSelected}\n        setSelections={props.setSelections}\n        setLoadBracket={props.setLoadBracket}\n      />\n    </CookiesProvider>\n  );\n};\n\nexport default GroupStage;\n","import Checkbox from \"@mui/material/Checkbox\";\nimport SportsSoccerIcon from \"@mui/icons-material/SportsSoccer\";\n\nimport \"./Team.css\";\n\nconst Team = (props) => {\n  const clickHandler = () => props.onSelected(props.team);\n  const isPlaceHolderTeam = props.team.name === \"Placeholder\";\n\n  const label =\n    props.team.position === 1 && props.team.selected\n      ? \"1st\"\n      : props.team.position === 2 && props.team.selected\n      ? \"2nd\"\n      : \"\";\n  const emoji =\n    props.team.position === 1 && props.team.selected\n      ? \"🥇\"\n      : props.team.position === 2 && props.team.selected\n      ? \"🥈\"\n      : \"\";\n\n  return (\n    <div\n      onClick={clickHandler}\n      className={`team ${\n        props.team.disabled\n          ? \"opacity-50 cursor-not-allowed hover:bg-opacity-100\"\n          : \"hover:bg-opacity-50 cursor-pointer\"\n      } relative text-center grid grid-cols-4 gap-2 bg-slate-100 p-2 border-b-2 border-slate-300 last:border-none first:rounded-tl-3xl last:rounded-br-3xl ${\n        props.size\n      }`}\n    >\n      <span\n        className=\"text-4xl md:text-5xl ml-1 md:ml-3 absolute -left-5 -top-2 z-10\"\n        role=\"img\"\n        aria-label={label}\n      >\n        {emoji}\n      </span>\n      <div className=\"relative flex items-center justify-center\">\n        <img\n          className=\"team__image w-full py-1\"\n          src={`/images/${props.team.name.replaceAll(\" \", \"-\")}.png`}\n          alt={props.team.name}\n        />\n      </div>\n      <div\n        className={`col-span-2${\n          props.size === \"small\" ? \" text-xl\" : \" text-2xl md:text-3xl\"\n        } font-bold grid justify-items-start`}\n      >\n        <div className=\"flex items-center text-slate-500\">\n          {isPlaceHolderTeam ? \"\" : props.team.name}\n        </div>\n      </div>\n      <Checkbox\n        sx={{\n          \"& .MuiSvgIcon-root\": { fontSize: props.size === \"small\" ? 32 : 48 },\n        }}\n        color=\"success\"\n        icon={<SportsSoccerIcon />}\n        checkedIcon={<SportsSoccerIcon />}\n        checked={props.team.selected}\n        disabled={isPlaceHolderTeam}\n      />\n    </div>\n  );\n};\n\nTeam.defaultProps = {\n  size: \"default\",\n};\n\nexport default Team;\n","import * as React from \"react\";\n\nexport const LEFT = \"Left\";\nexport const RIGHT = \"Right\";\nexport const UP = \"Up\";\nexport const DOWN = \"Down\";\nexport type HandledEvents = React.MouseEvent | TouchEvent | MouseEvent;\nexport type Vector2 = [number, number];\nexport type SwipeDirections =\n  | typeof LEFT\n  | typeof RIGHT\n  | typeof UP\n  | typeof DOWN;\nexport interface SwipeEventData {\n  absX: number;\n  absY: number;\n  deltaX: number;\n  deltaY: number;\n  dir: SwipeDirections;\n  event: HandledEvents;\n  first: boolean;\n  initial: Vector2;\n  velocity: number;\n  vxvy: Vector2;\n}\n\nexport type SwipeCallback = (eventData: SwipeEventData) => void;\nexport type TapCallback = ({ event }: { event: HandledEvents }) => void;\n\nexport type SwipeableCallbacks = {\n  // Event handler/callbacks\n  onSwipeStart: SwipeCallback;\n  onSwiped: SwipeCallback;\n  onSwipedDown: SwipeCallback;\n  onSwipedLeft: SwipeCallback;\n  onSwipedRight: SwipeCallback;\n  onSwipedUp: SwipeCallback;\n  onSwiping: SwipeCallback;\n  onTap: TapCallback;\n};\n\n// Configuration Options\nexport type ConfigurationOptionDelta =\n  | number\n  | { [key in Lowercase<SwipeDirections>]?: number };\nexport interface ConfigurationOptions {\n  delta: ConfigurationOptionDelta;\n  preventDefaultTouchmoveEvent: boolean;\n  rotationAngle: number;\n  trackMouse: boolean;\n  trackTouch: boolean;\n}\n\nexport type SwipeableProps = Partial<SwipeableCallbacks & ConfigurationOptions>;\n\nexport type SwipeablePropsWithDefaultOptions = Partial<SwipeableCallbacks> &\n  ConfigurationOptions;\n\nexport interface SwipeableHandlers {\n  ref(element: HTMLElement | null): void;\n  onMouseDown?(event: React.MouseEvent): void;\n}\n\nexport type SwipeableState = {\n  cleanUpTouch?: () => void;\n  el?: HTMLElement;\n  eventData?: SwipeEventData;\n  first: boolean;\n  initial: Vector2;\n  start: number;\n  swiping: boolean;\n  xy: Vector2;\n};\n\nexport type StateSetter = (\n  state: SwipeableState,\n  props: SwipeablePropsWithDefaultOptions\n) => SwipeableState;\nexport type Setter = (stateSetter: StateSetter) => void;\nexport type AttachTouch = (el: HTMLElement, passive: boolean) => () => void;\n","/* global document */\nimport * as React from \"react\";\nimport {\n  AttachTouch,\n  SwipeDirections,\n  DOWN,\n  SwipeEventData,\n  HandledEvents,\n  LEFT,\n  RIGHT,\n  Setter,\n  ConfigurationOptions,\n  SwipeableCallbacks,\n  SwipeableHandlers,\n  SwipeableProps,\n  SwipeablePropsWithDefaultOptions,\n  SwipeableState,\n  SwipeCallback,\n  TapCallback,\n  UP,\n  Vector2,\n} from \"./types\";\n\nexport {\n  LEFT,\n  RIGHT,\n  UP,\n  DOWN,\n  SwipeDirections,\n  SwipeEventData,\n  SwipeCallback,\n  TapCallback,\n  SwipeableHandlers,\n  SwipeableProps,\n  Vector2,\n};\n\nconst defaultProps: ConfigurationOptions = {\n  delta: 10,\n  preventDefaultTouchmoveEvent: false,\n  rotationAngle: 0,\n  trackMouse: false,\n  trackTouch: true,\n};\nconst initialState: SwipeableState = {\n  first: true,\n  initial: [0, 0],\n  start: 0,\n  swiping: false,\n  xy: [0, 0],\n};\nconst mouseMove = \"mousemove\";\nconst mouseUp = \"mouseup\";\nconst touchEnd = \"touchend\";\nconst touchMove = \"touchmove\";\nconst touchStart = \"touchstart\";\n\nfunction getDirection(\n  absX: number,\n  absY: number,\n  deltaX: number,\n  deltaY: number\n): SwipeDirections {\n  if (absX > absY) {\n    if (deltaX > 0) {\n      return RIGHT;\n    }\n    return LEFT;\n  } else if (deltaY > 0) {\n    return DOWN;\n  }\n  return UP;\n}\n\nfunction rotateXYByAngle(pos: Vector2, angle: number): Vector2 {\n  if (angle === 0) return pos;\n  const angleInRadians = (Math.PI / 180) * angle;\n  const x =\n    pos[0] * Math.cos(angleInRadians) + pos[1] * Math.sin(angleInRadians);\n  const y =\n    pos[1] * Math.cos(angleInRadians) - pos[0] * Math.sin(angleInRadians);\n  return [x, y];\n}\n\nfunction getHandlers(\n  set: Setter,\n  handlerProps: { trackMouse: boolean | undefined }\n): [\n  {\n    ref: (element: HTMLElement | null) => void;\n    onMouseDown?: (event: React.MouseEvent) => void;\n  },\n  AttachTouch\n] {\n  const onStart = (event: HandledEvents) => {\n    // if more than a single touch don't track, for now...\n    if (event && \"touches\" in event && event.touches.length > 1) return;\n\n    set((state, props) => {\n      // setup mouse listeners on document to track swipe since swipe can leave container\n      if (props.trackMouse) {\n        document.addEventListener(mouseMove, onMove);\n        document.addEventListener(mouseUp, onUp);\n      }\n      const { clientX, clientY } =\n        \"touches\" in event ? event.touches[0] : event;\n      const xy = rotateXYByAngle([clientX, clientY], props.rotationAngle);\n      return {\n        ...state,\n        ...initialState,\n        initial: [...xy],\n        xy,\n        start: event.timeStamp || 0,\n      };\n    });\n  };\n\n  const onMove = (event: HandledEvents) => {\n    set((state, props) => {\n      // Discount a swipe if additional touches are present after\n      // a swipe has started.\n      if (\"touches\" in event && event.touches.length > 1) {\n        return state;\n      }\n      const { clientX, clientY } =\n        \"touches\" in event ? event.touches[0] : event;\n      const [x, y] = rotateXYByAngle([clientX, clientY], props.rotationAngle);\n      const deltaX = x - state.xy[0];\n      const deltaY = y - state.xy[1];\n      const absX = Math.abs(deltaX);\n      const absY = Math.abs(deltaY);\n      const time = (event.timeStamp || 0) - state.start;\n      const velocity = Math.sqrt(absX * absX + absY * absY) / (time || 1);\n      const vxvy: Vector2 = [deltaX / (time || 1), deltaY / (time || 1)];\n\n      const dir = getDirection(absX, absY, deltaX, deltaY);\n\n      // if swipe is under delta and we have not started to track a swipe: skip update\n      const delta =\n        typeof props.delta === \"number\"\n          ? props.delta\n          : props.delta[dir.toLowerCase() as Lowercase<SwipeDirections>] ||\n            defaultProps.delta;\n      if (absX < delta && absY < delta && !state.swiping) return state;\n\n      const eventData = {\n        absX,\n        absY,\n        deltaX,\n        deltaY,\n        dir,\n        event,\n        first: state.first,\n        initial: state.initial,\n        velocity,\n        vxvy,\n      };\n\n      // call onSwipeStart if present and is first swipe event\n      eventData.first && props.onSwipeStart && props.onSwipeStart(eventData);\n\n      // Call onSwiping if present\n      props.onSwiping && props.onSwiping(eventData);\n\n      // track if a swipe is cancelable(handler for swiping or swiped(dir) exists)\n      // so we can call preventDefault if needed\n      let cancelablePageSwipe = false;\n      if (props.onSwiping || props.onSwiped || `onSwiped${dir}` in props) {\n        cancelablePageSwipe = true;\n      }\n\n      if (\n        cancelablePageSwipe &&\n        props.preventDefaultTouchmoveEvent &&\n        props.trackTouch &&\n        event.cancelable\n      )\n        event.preventDefault();\n\n      return {\n        ...state,\n        // first is now always false\n        first: false,\n        eventData,\n        swiping: true,\n      };\n    });\n  };\n\n  const onEnd = (event: HandledEvents) => {\n    set((state, props) => {\n      let eventData: SwipeEventData | undefined;\n      if (state.swiping && state.eventData) {\n        eventData = { ...state.eventData, event };\n        props.onSwiped && props.onSwiped(eventData);\n\n        const onSwipedDir =\n          props[`onSwiped${eventData.dir}` as keyof SwipeableCallbacks];\n        onSwipedDir && onSwipedDir(eventData);\n      } else {\n        props.onTap && props.onTap({ event });\n      }\n      return { ...state, ...initialState, eventData };\n    });\n  };\n\n  const cleanUpMouse = () => {\n    // safe to just call removeEventListener\n    document.removeEventListener(mouseMove, onMove);\n    document.removeEventListener(mouseUp, onUp);\n  };\n\n  const onUp = (e: HandledEvents) => {\n    cleanUpMouse();\n    onEnd(e);\n  };\n\n  /**\n   * Switch of \"passive\" property for now.\n   * When `preventDefaultTouchmoveEvent` is:\n   * - true => { passive: false }\n   * - false => { passive: true }\n   *\n   * Could take entire `addEventListener` options object as a param later?\n   */\n  const attachTouch: AttachTouch = (el, passive) => {\n    let cleanup = () => {};\n    if (el && el.addEventListener) {\n      // attach touch event listeners and handlers\n      const tls: [\n        typeof touchStart | typeof touchMove | typeof touchEnd,\n        (e: HandledEvents) => void\n      ][] = [\n        [touchStart, onStart],\n        [touchMove, onMove],\n        [touchEnd, onEnd],\n      ];\n      tls.forEach(([e, h]) => el.addEventListener(e, h, { passive }));\n      // return properly scoped cleanup method for removing listeners, options not required\n      cleanup = () => tls.forEach(([e, h]) => el.removeEventListener(e, h));\n    }\n    return cleanup;\n  };\n\n  const onRef = (el: HTMLElement | null) => {\n    // \"inline\" ref functions are called twice on render, once with null then again with DOM element\n    // ignore null here\n    if (el === null) return;\n    set((state, props) => {\n      // if the same DOM el as previous just return state\n      if (state.el === el) return state;\n\n      const addState: { cleanUpTouch?: () => void } = {};\n      // if new DOM el clean up old DOM and reset cleanUpTouch\n      if (state.el && state.el !== el && state.cleanUpTouch) {\n        state.cleanUpTouch();\n        addState.cleanUpTouch = void 0;\n      }\n      // only attach if we want to track touch\n      if (props.trackTouch && el) {\n        addState.cleanUpTouch = attachTouch(\n          el,\n          !props.preventDefaultTouchmoveEvent\n        );\n      }\n\n      // store event attached DOM el for comparison, clean up, and re-attachment\n      return { ...state, el, ...addState };\n    });\n  };\n\n  // set ref callback to attach touch event listeners\n  const output: { ref: typeof onRef; onMouseDown?: typeof onStart } = {\n    ref: onRef,\n  };\n\n  // if track mouse attach mouse down listener\n  if (handlerProps.trackMouse) {\n    output.onMouseDown = onStart;\n  }\n\n  return [output, attachTouch];\n}\n\nfunction updateTransientState(\n  state: SwipeableState,\n  props: SwipeableProps,\n  attachTouch: AttachTouch\n) {\n  const addState: { cleanUpTouch?(): void } = {};\n  // clean up touch handlers if no longer tracking touches\n  if (!props.trackTouch && state.cleanUpTouch) {\n    state.cleanUpTouch();\n    addState.cleanUpTouch = void 0;\n  } else if (props.trackTouch && !state.cleanUpTouch) {\n    // attach/re-attach touch handlers\n    if (state.el) {\n      addState.cleanUpTouch = attachTouch(\n        state.el,\n        !props.preventDefaultTouchmoveEvent\n      );\n    }\n  }\n  return { ...state, ...addState };\n}\n\nexport function useSwipeable(options: SwipeableProps): SwipeableHandlers {\n  const { trackMouse } = options;\n  const transientState = React.useRef({ ...initialState });\n  const transientProps = React.useRef<SwipeablePropsWithDefaultOptions>({\n    ...defaultProps,\n  });\n  transientProps.current = {\n    ...defaultProps,\n    ...options,\n    // Force defaults for config properties\n    delta: options.delta === void 0 ? defaultProps.delta : options.delta,\n    rotationAngle:\n      options.rotationAngle === void 0\n        ? defaultProps.rotationAngle\n        : options.rotationAngle,\n    trackTouch:\n      options.trackTouch === void 0\n        ? defaultProps.trackTouch\n        : options.trackTouch,\n  };\n\n  const [handlers, attachTouch] = React.useMemo(\n    () =>\n      getHandlers(\n        (stateSetter) =>\n          (transientState.current = stateSetter(\n            transientState.current,\n            transientProps.current\n          )),\n        { trackMouse }\n      ),\n    [trackMouse]\n  );\n\n  transientState.current = updateTransientState(\n    transientState.current,\n    transientProps.current,\n    attachTouch\n  );\n\n  return handlers;\n}\n"],"names":["props","useState","teams","setTeams","selectedHandler","team","selectedTeamsCount","filter","t","selected","length","updatedTeams","onTeamSelected","map","team1","id","selectedTeams","unselectedTeams","disabled","position","i","concat","onResult","join","group","NextButton","styled","Button","fontWeight","letterSpacing","padding","fontSize","display","float","PrevButton","isButtonDisabled","swipeHandlers","useSwipeable","onSwipedLeft","e","absX","onMove","onSwipedRight","className","Team","onSelected","variant","color","onClick","ToKnockoutRounds","React","Groups","moveHandler","document","querySelector","style","transform","teamsSelectedHandler","newTeamsSelected","teamsSelected","setTeamsSelected","groupsData","totalTeamsSelected","Suspense","fallback","setTimeout","setLoadBracket","window","scrollTo","behavior","top","setSelections","defaultProps","useCookies","cookie","setCookie","CookiesProvider","picks","result","ProcessGroupStagePick","path","isPlaceHolderTeam","name","label","emoji","size","role","src","replaceAll","alt","Checkbox","sx","icon","SportsSoccer","checkedIcon","checked","LEFT","RIGHT","UP","DOWN","delta","preventDefaultTouchmoveEvent","rotationAngle","trackMouse","trackTouch","initialState","first","initial","start","swiping","xy","mouseMove","mouseUp","touchEnd","touchMove","touchStart","getDirection","absY","deltaX","deltaY","rotateXYByAngle","pos","angle","angleInRadians","Math","PI","cos","sin","getHandlers","set","handlerProps","onStart","event","touches","state","addEventListener","onUp","clientX","clientY","timeStamp","x","y","abs","time","velocity","sqrt","vxvy","dir","toLowerCase","eventData","onSwipeStart","onSwiping","cancelablePageSwipe","onSwiped","cancelable","preventDefault","onEnd","onSwipedDir","onTap","cleanUpMouse","removeEventListener","attachTouch","el","passive","cleanup","tls","forEach","h","output","ref","addState","cleanUpTouch","onMouseDown","updateTransientState","options","transientState","useRef","transientProps","current","useMemo","stateSetter","handlers"],"sourceRoot":""}